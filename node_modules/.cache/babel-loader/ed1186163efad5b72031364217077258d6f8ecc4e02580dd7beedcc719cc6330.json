{"ast":null,"code":"var _jsxFileName = \"/Users/Matt.Ratliff/Development/lexical-sandbox/src/components/Editor/plugins/TablePlugin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './TablePlugin.css';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { $setSelection } from 'lexical';\nimport { INSERT_TABLE_COMMAND } from '@lexical/table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 8;\nfunction TablePlugin({\n  isTablePoppedUp,\n  setIsTablePoppedUp\n}) {\n  _s();\n  const [editor] = useLexicalComposerContext();\n  const savedSelectionRef = useRef(null);\n  const [selectedRows, setSelectedRows] = useState(0);\n  const [selectedCols, setSelectedCols] = useState(0);\n  const popupRef = useRef(null);\n  const gridSize = 8;\n  const closePopup = () => {\n    setIsTablePoppedUp(false);\n  };\n  const createTable = (rows, cols) => {\n    editor.update(() => {\n      const savedSelection = savedSelectionRef.current;\n      if (savedSelection) {\n        $setSelection(savedSelection);\n      }\n      console.log('inserting table command');\n      console.log(editor);\n      editor.dispatchCommand(INSERT_TABLE_COMMAND, {\n        columns: cols,\n        rows\n      });\n      editor.focus();\n    });\n    closePopup();\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (popupRef.current && !popupRef.current.contains(event.target)) {\n        closePopup();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isTablePoppedUp]);\n  const selectGridCells = index => {\n    const rowSize = gridSize;\n    const row = Math.floor(index / rowSize);\n    const col = index % rowSize;\n    setSelectedRows(row + 1);\n    setSelectedCols(col + 1);\n  };\n  const handleMouseOver = index => {\n    selectGridCells(index);\n  };\n  const handleCellClick = () => {\n    createTable(selectedRows, selectedCols);\n  };\n  const handleKeyDown = (event, index) => {\n    const newIndex = index;\n    const keyActions = {\n      Enter: () => ({\n        action: 'select',\n        newIndex\n      }),\n      ' ': () => ({\n        action: 'select',\n        newIndex\n      }),\n      ArrowUp: () => ({\n        action: 'move',\n        newIndex: Math.max(0, index - GRID_SIZE)\n      }),\n      ArrowDown: () => ({\n        action: 'move',\n        newIndex: Math.min(GRID_SIZE * GRID_SIZE - 1, index + GRID_SIZE)\n      }),\n      ArrowLeft: () => ({\n        action: 'move',\n        newIndex: Math.max(0, index - 1)\n      }),\n      ArrowRight: () => ({\n        action: 'move',\n        newIndex: Math.min(GRID_SIZE * GRID_SIZE - 1, index + 1)\n      }),\n      Escape: () => ({\n        action: 'escape'\n      }),\n      Tab: () => ({\n        action: 'prevent'\n      })\n    };\n    const keyAction = keyActions[event.key];\n    if (!keyAction) return;\n    event.preventDefault();\n    const result = keyAction();\n    if (result.action === 'escape') {\n      closePopup();\n    }\n    if (result.action === 'select') {\n      handleCellClick();\n    }\n    if (result.action === 'move') {\n      selectGridCells(result.newIndex);\n      const nextCell = document.querySelector(`[data-index=\"${result.newIndex}\"]`);\n      nextCell === null || nextCell === void 0 ? void 0 : nextCell.focus();\n    }\n  };\n  return isTablePoppedUp && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lexical-table-popup\",\n    ref: popupRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lexical-table-popup-grid\",\n      style: {\n        gridTemplateColumns: `repeat(${gridSize}, 15px)`,\n        gridTemplateRows: `repeat(${gridSize}, 15px)`\n      },\n      children: Array.from({\n        length: gridSize * gridSize\n      }).map((_, index) => {\n        const row = Math.floor(index / gridSize);\n        const col = index % gridSize;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-index\": index,\n          \"aria-label\": `Select row ${row + 1}, column ${col + 1}`,\n          className: `lexical-table-popup-grid-cell ${row < selectedRows && col < selectedCols ? 'lexical-table-popup-selected' : ''}`,\n          onMouseOver: () => handleMouseOver(index),\n          onFocus: () => handleMouseOver(index),\n          onClick: handleCellClick,\n          onKeyDown: e => handleKeyDown(e, index),\n          role: \"button\",\n          tabIndex: 0\n        }, `grid-${row}-${col}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: 0,\n        margin: 0\n      },\n      children: [selectedRows, ' ', \"X\", selectedCols]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 7\n  }, this);\n}\n_s(TablePlugin, \"406IpOfuKacPeRitRF8ULQdSRzA=\", false, function () {\n  return [useLexicalComposerContext];\n});\n_c = TablePlugin;\nTablePlugin.propTypes = {\n  isTablePoppedUp: PropTypes.bool.isRequired,\n  setIsTablePoppedUp: PropTypes.func.isRequired\n};\nexport default TablePlugin;\nvar _c;\n$RefreshReg$(_c, \"TablePlugin\");","map":{"version":3,"names":["React","useEffect","useRef","useState","PropTypes","useLexicalComposerContext","$setSelection","INSERT_TABLE_COMMAND","jsxDEV","_jsxDEV","GRID_SIZE","TablePlugin","isTablePoppedUp","setIsTablePoppedUp","_s","editor","savedSelectionRef","selectedRows","setSelectedRows","selectedCols","setSelectedCols","popupRef","gridSize","closePopup","createTable","rows","cols","update","savedSelection","current","console","log","dispatchCommand","columns","focus","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","selectGridCells","index","rowSize","row","Math","floor","col","handleMouseOver","handleCellClick","handleKeyDown","newIndex","keyActions","Enter","action"," ","ArrowUp","max","ArrowDown","min","ArrowLeft","ArrowRight","Escape","Tab","keyAction","key","preventDefault","result","nextCell","querySelector","className","ref","children","style","gridTemplateColumns","gridTemplateRows","Array","from","length","map","_","onMouseOver","onFocus","onClick","onKeyDown","e","role","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","padding","margin","_c","propTypes","bool","isRequired","func","$RefreshReg$"],"sources":["/Users/Matt.Ratliff/Development/lexical-sandbox/src/components/Editor/plugins/TablePlugin.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './TablePlugin.css';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { $setSelection } from 'lexical';\nimport { INSERT_TABLE_COMMAND } from '@lexical/table';\n\nconst GRID_SIZE = 8;\n\nfunction TablePlugin({ isTablePoppedUp, setIsTablePoppedUp }) {\n  const [editor] = useLexicalComposerContext();\n  const savedSelectionRef = useRef(null);\n  const [selectedRows, setSelectedRows] = useState(0);\n  const [selectedCols, setSelectedCols] = useState(0);\n  const popupRef = useRef(null);\n  const gridSize = 8;\n\n  const closePopup = () => {\n    setIsTablePoppedUp(false);\n  };\n\n  const createTable = (rows, cols) => {\n    editor.update(() => {\n      const savedSelection = savedSelectionRef.current;\n      if (savedSelection) {\n        $setSelection(savedSelection);\n      }\n      console.log('inserting table command')\n      console.log(editor);\n      editor.dispatchCommand(INSERT_TABLE_COMMAND, { columns: cols, rows });\n      editor.focus();\n    });\n    closePopup();\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (popupRef.current && !popupRef.current.contains(event.target)) {\n        closePopup();\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isTablePoppedUp]);\n\n  const selectGridCells = (index) => {\n    const rowSize = gridSize;\n    const row = Math.floor(index / rowSize);\n    const col = index % rowSize;\n    setSelectedRows(row + 1);\n    setSelectedCols(col + 1);\n  };\n\n  const handleMouseOver = (index) => {\n    selectGridCells(index);\n  };\n\n  const handleCellClick = () => {\n    createTable(selectedRows, selectedCols);\n  };\n\n  const handleKeyDown = (event, index) => {\n    const newIndex = index;\n\n    const keyActions = {\n      Enter: () => ({ action: 'select', newIndex }),\n      ' ': () => ({ action: 'select', newIndex }),\n      ArrowUp: () => ({ action: 'move', newIndex: Math.max(0, index - GRID_SIZE) }),\n      ArrowDown: () => ({ action: 'move', newIndex: Math.min(GRID_SIZE * GRID_SIZE - 1, index + GRID_SIZE) }),\n      ArrowLeft: () => ({ action: 'move', newIndex: Math.max(0, index - 1) }),\n      ArrowRight: () => ({ action: 'move', newIndex: Math.min(GRID_SIZE * GRID_SIZE - 1, index + 1) }),\n      Escape: () => ({ action: 'escape' }),\n      Tab: () => ({ action: 'prevent' }),\n    };\n\n    const keyAction = keyActions[event.key];\n    if (!keyAction) return;\n\n    event.preventDefault();\n    const result = keyAction();\n\n    if (result.action === 'escape') {\n      closePopup();\n    }\n    if (result.action === 'select') {\n      handleCellClick();\n    }\n    if (result.action === 'move') {\n      selectGridCells(result.newIndex);\n      const nextCell = document.querySelector(`[data-index=\"${result.newIndex}\"]`);\n      nextCell?.focus();\n    }\n  };\n\n  return (\n    isTablePoppedUp && (\n      <div className=\"lexical-table-popup\" ref={popupRef}>\n        <div\n          className=\"lexical-table-popup-grid\"\n          style={{\n            gridTemplateColumns: `repeat(${gridSize}, 15px)`,\n            gridTemplateRows: `repeat(${gridSize}, 15px)`,\n          }}\n        >\n          {Array.from({ length: gridSize * gridSize }).map((_, index) => {\n            const row = Math.floor(index / gridSize);\n            const col = index % gridSize;\n            return (\n              <div\n                key={`grid-${row}-${col}`}\n                data-index={index}\n                aria-label={`Select row ${row + 1}, column ${col + 1}`}\n                className={`lexical-table-popup-grid-cell ${\n                  row < selectedRows && col < selectedCols ? 'lexical-table-popup-selected' : ''\n                }`}\n                onMouseOver={() => handleMouseOver(index)}\n                onFocus={() => handleMouseOver(index)}\n                onClick={handleCellClick}\n                onKeyDown={(e) => handleKeyDown(e, index)}\n                role=\"button\"\n                tabIndex={0}\n              />\n            );\n          })}\n        </div>\n        <div style={{ textAlign: 'center', padding: 0, margin: 0 }}>\n          {selectedRows}\n          {' '}\n          X\n          {selectedCols}\n        </div>\n      </div>\n    )\n  );\n}\n\nTablePlugin.propTypes = {\n  isTablePoppedUp: PropTypes.bool.isRequired,\n  setIsTablePoppedUp: PropTypes.func.isRequired,\n};\n\nexport default TablePlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}