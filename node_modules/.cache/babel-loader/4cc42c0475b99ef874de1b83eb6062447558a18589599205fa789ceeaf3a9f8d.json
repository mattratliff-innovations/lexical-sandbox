{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLayoutEffect, useEffect, forwardRef, useState, useCallback, useMemo } from 'react';\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { $canShowPlaceholderCurry } from '@lexical/text';\nimport { mergeRegister } from '@lexical/utils';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n// Source: https://github.com/gregberge/react-merge-refs/blob/main/src/index.tsx\n\nfunction mergeRefs(...refs) {\n  return value => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction ContentEditableElementImpl({\n  editor,\n  ariaActiveDescendant,\n  ariaAutoComplete,\n  ariaControls,\n  ariaDescribedBy,\n  ariaErrorMessage,\n  ariaExpanded,\n  ariaInvalid,\n  ariaLabel,\n  ariaLabelledBy,\n  ariaMultiline,\n  ariaOwns,\n  ariaRequired,\n  autoCapitalize,\n  className,\n  id,\n  role = 'textbox',\n  spellCheck = true,\n  style,\n  tabIndex,\n  'data-testid': testid,\n  ...rest\n}, ref) {\n  const [isEditable, setEditable] = useState(editor.isEditable());\n  const handleRef = useCallback(rootElement => {\n    // defaultView is required for a root element.\n    // In multi-window setups, the defaultView may not exist at certain points.\n    if (rootElement && rootElement.ownerDocument && rootElement.ownerDocument.defaultView) {\n      editor.setRootElement(rootElement);\n    } else {\n      editor.setRootElement(null);\n    }\n  }, [editor]);\n  const mergedRefs = useMemo(() => mergeRefs(ref, handleRef), [handleRef, ref]);\n  useLayoutEffectImpl(() => {\n    setEditable(editor.isEditable());\n    return editor.registerEditableListener(currentIsEditable => {\n      setEditable(currentIsEditable);\n    });\n  }, [editor]);\n  return /*#__PURE__*/jsx(\"div\", {\n    \"aria-activedescendant\": isEditable ? ariaActiveDescendant : undefined,\n    \"aria-autocomplete\": isEditable ? ariaAutoComplete : 'none',\n    \"aria-controls\": isEditable ? ariaControls : undefined,\n    \"aria-describedby\": ariaDescribedBy\n    // for compat, only override aria-errormessage if ariaErrorMessage is defined\n    ,\n\n    ...(ariaErrorMessage != null ? {\n      'aria-errormessage': ariaErrorMessage\n    } : {}),\n    \"aria-expanded\": isEditable && role === 'combobox' ? !!ariaExpanded : undefined\n    // for compat, only override aria-invalid if ariaInvalid is defined\n    ,\n\n    ...(ariaInvalid != null ? {\n      'aria-invalid': ariaInvalid\n    } : {}),\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-multiline\": ariaMultiline,\n    \"aria-owns\": isEditable ? ariaOwns : undefined,\n    \"aria-readonly\": isEditable ? undefined : true,\n    \"aria-required\": ariaRequired,\n    autoCapitalize: autoCapitalize,\n    className: className,\n    contentEditable: isEditable,\n    \"data-testid\": testid,\n    id: id,\n    ref: mergedRefs,\n    role: isEditable ? role : undefined,\n    spellCheck: spellCheck,\n    style: style,\n    tabIndex: tabIndex,\n    ...rest\n  });\n}\nconst ContentEditableElement = /*#__PURE__*/forwardRef(ContentEditableElementImpl);\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction canShowPlaceholderFromCurrentEditorState(editor) {\n  const currentCanShowPlaceholder = editor.getEditorState().read($canShowPlaceholderCurry(editor.isComposing()));\n  return currentCanShowPlaceholder;\n}\nfunction useCanShowPlaceholder(editor) {\n  const [canShowPlaceholder, setCanShowPlaceholder] = useState(() => canShowPlaceholderFromCurrentEditorState(editor));\n  useLayoutEffectImpl(() => {\n    function resetCanShowPlaceholder() {\n      const currentCanShowPlaceholder = canShowPlaceholderFromCurrentEditorState(editor);\n      setCanShowPlaceholder(currentCanShowPlaceholder);\n    }\n    resetCanShowPlaceholder();\n    return mergeRegister(editor.registerUpdateListener(() => {\n      resetCanShowPlaceholder();\n    }), editor.registerEditableListener(() => {\n      resetCanShowPlaceholder();\n    }));\n  }, [editor]);\n  return canShowPlaceholder;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst ContentEditable = /*#__PURE__*/forwardRef(ContentEditableImpl);\nfunction ContentEditableImpl(props, ref) {\n  const {\n    placeholder,\n    ...rest\n  } = props;\n  const [editor] = useLexicalComposerContext();\n  return /*#__PURE__*/jsxs(Fragment, {\n    children: [/*#__PURE__*/jsx(ContentEditableElement, {\n      editor: editor,\n      ...rest,\n      ref: ref\n    }), placeholder != null && /*#__PURE__*/jsx(Placeholder, {\n      editor: editor,\n      content: placeholder\n    })]\n  });\n}\nfunction Placeholder({\n  content,\n  editor\n}) {\n  const showPlaceholder = useCanShowPlaceholder(editor);\n  const [isEditable, setEditable] = useState(editor.isEditable());\n  useLayoutEffect(() => {\n    setEditable(editor.isEditable());\n    return editor.registerEditableListener(currentIsEditable => {\n      setEditable(currentIsEditable);\n    });\n  }, [editor]);\n  if (!showPlaceholder) {\n    return null;\n  }\n  let placeholder = null;\n  if (typeof content === 'function') {\n    placeholder = content(isEditable);\n  } else if (content !== null) {\n    placeholder = content;\n  }\n  if (placeholder === null) {\n    return null;\n  }\n  return /*#__PURE__*/jsx(\"div\", {\n    \"aria-hidden\": true,\n    children: placeholder\n  });\n}\nexport { ContentEditable };","map":{"version":3,"names":["useLexicalComposerContext","useLayoutEffect","useEffect","forwardRef","useState","useCallback","useMemo","jsx","jsxs","Fragment","$canShowPlaceholderCurry","mergeRegister","CAN_USE_DOM","window","document","createElement","useLayoutEffectImpl","mergeRefs","refs","value","forEach","ref","current","ContentEditableElementImpl","editor","ariaActiveDescendant","ariaAutoComplete","ariaControls","ariaDescribedBy","ariaErrorMessage","ariaExpanded","ariaInvalid","ariaLabel","ariaLabelledBy","ariaMultiline","ariaOwns","ariaRequired","autoCapitalize","className","id","role","spellCheck","style","tabIndex","testid","rest","isEditable","setEditable","handleRef","rootElement","ownerDocument","defaultView","setRootElement","mergedRefs","registerEditableListener","currentIsEditable","undefined","contentEditable","ContentEditableElement","canShowPlaceholderFromCurrentEditorState","currentCanShowPlaceholder","getEditorState","read","isComposing","useCanShowPlaceholder","canShowPlaceholder","setCanShowPlaceholder","resetCanShowPlaceholder","registerUpdateListener","ContentEditable","ContentEditableImpl","props","placeholder","children","Placeholder","content","showPlaceholder"],"sources":["/Users/Matt.Ratliff/Development/lexical-sandbox/node_modules/@lexical/react/LexicalContentEditable.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLayoutEffect, useEffect, forwardRef, useState, useCallback, useMemo } from 'react';\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { $canShowPlaceholderCurry } from '@lexical/text';\nimport { mergeRegister } from '@lexical/utils';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n// Source: https://github.com/gregberge/react-merge-refs/blob/main/src/index.tsx\n\nfunction mergeRefs(...refs) {\n  return value => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction ContentEditableElementImpl({\n  editor,\n  ariaActiveDescendant,\n  ariaAutoComplete,\n  ariaControls,\n  ariaDescribedBy,\n  ariaErrorMessage,\n  ariaExpanded,\n  ariaInvalid,\n  ariaLabel,\n  ariaLabelledBy,\n  ariaMultiline,\n  ariaOwns,\n  ariaRequired,\n  autoCapitalize,\n  className,\n  id,\n  role = 'textbox',\n  spellCheck = true,\n  style,\n  tabIndex,\n  'data-testid': testid,\n  ...rest\n}, ref) {\n  const [isEditable, setEditable] = useState(editor.isEditable());\n  const handleRef = useCallback(rootElement => {\n    // defaultView is required for a root element.\n    // In multi-window setups, the defaultView may not exist at certain points.\n    if (rootElement && rootElement.ownerDocument && rootElement.ownerDocument.defaultView) {\n      editor.setRootElement(rootElement);\n    } else {\n      editor.setRootElement(null);\n    }\n  }, [editor]);\n  const mergedRefs = useMemo(() => mergeRefs(ref, handleRef), [handleRef, ref]);\n  useLayoutEffectImpl(() => {\n    setEditable(editor.isEditable());\n    return editor.registerEditableListener(currentIsEditable => {\n      setEditable(currentIsEditable);\n    });\n  }, [editor]);\n  return /*#__PURE__*/jsx(\"div\", {\n    \"aria-activedescendant\": isEditable ? ariaActiveDescendant : undefined,\n    \"aria-autocomplete\": isEditable ? ariaAutoComplete : 'none',\n    \"aria-controls\": isEditable ? ariaControls : undefined,\n    \"aria-describedby\": ariaDescribedBy\n    // for compat, only override aria-errormessage if ariaErrorMessage is defined\n    ,\n    ...(ariaErrorMessage != null ? {\n      'aria-errormessage': ariaErrorMessage\n    } : {}),\n    \"aria-expanded\": isEditable && role === 'combobox' ? !!ariaExpanded : undefined\n    // for compat, only override aria-invalid if ariaInvalid is defined\n    ,\n    ...(ariaInvalid != null ? {\n      'aria-invalid': ariaInvalid\n    } : {}),\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-multiline\": ariaMultiline,\n    \"aria-owns\": isEditable ? ariaOwns : undefined,\n    \"aria-readonly\": isEditable ? undefined : true,\n    \"aria-required\": ariaRequired,\n    autoCapitalize: autoCapitalize,\n    className: className,\n    contentEditable: isEditable,\n    \"data-testid\": testid,\n    id: id,\n    ref: mergedRefs,\n    role: isEditable ? role : undefined,\n    spellCheck: spellCheck,\n    style: style,\n    tabIndex: tabIndex,\n    ...rest\n  });\n}\nconst ContentEditableElement = /*#__PURE__*/forwardRef(ContentEditableElementImpl);\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction canShowPlaceholderFromCurrentEditorState(editor) {\n  const currentCanShowPlaceholder = editor.getEditorState().read($canShowPlaceholderCurry(editor.isComposing()));\n  return currentCanShowPlaceholder;\n}\nfunction useCanShowPlaceholder(editor) {\n  const [canShowPlaceholder, setCanShowPlaceholder] = useState(() => canShowPlaceholderFromCurrentEditorState(editor));\n  useLayoutEffectImpl(() => {\n    function resetCanShowPlaceholder() {\n      const currentCanShowPlaceholder = canShowPlaceholderFromCurrentEditorState(editor);\n      setCanShowPlaceholder(currentCanShowPlaceholder);\n    }\n    resetCanShowPlaceholder();\n    return mergeRegister(editor.registerUpdateListener(() => {\n      resetCanShowPlaceholder();\n    }), editor.registerEditableListener(() => {\n      resetCanShowPlaceholder();\n    }));\n  }, [editor]);\n  return canShowPlaceholder;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst ContentEditable = /*#__PURE__*/forwardRef(ContentEditableImpl);\nfunction ContentEditableImpl(props, ref) {\n  const {\n    placeholder,\n    ...rest\n  } = props;\n  const [editor] = useLexicalComposerContext();\n  return /*#__PURE__*/jsxs(Fragment, {\n    children: [/*#__PURE__*/jsx(ContentEditableElement, {\n      editor: editor,\n      ...rest,\n      ref: ref\n    }), placeholder != null && /*#__PURE__*/jsx(Placeholder, {\n      editor: editor,\n      content: placeholder\n    })]\n  });\n}\nfunction Placeholder({\n  content,\n  editor\n}) {\n  const showPlaceholder = useCanShowPlaceholder(editor);\n  const [isEditable, setEditable] = useState(editor.isEditable());\n  useLayoutEffect(() => {\n    setEditable(editor.isEditable());\n    return editor.registerEditableListener(currentIsEditable => {\n      setEditable(currentIsEditable);\n    });\n  }, [editor]);\n  if (!showPlaceholder) {\n    return null;\n  }\n  let placeholder = null;\n  if (typeof content === 'function') {\n    placeholder = content(isEditable);\n  } else if (content !== null) {\n    placeholder = content;\n  }\n  if (placeholder === null) {\n    return null;\n  }\n  return /*#__PURE__*/jsx(\"div\", {\n    \"aria-hidden\": true,\n    children: placeholder\n  });\n}\n\nexport { ContentEditable };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,yBAAyB,QAAQ,uCAAuC;AACjF,SAASC,eAAe,EAAEC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC9F,SAASC,GAAG,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,mBAAmB;AACvD,SAASC,wBAAwB,QAAQ,eAAe;AACxD,SAASC,aAAa,QAAQ,gBAAgB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,WAAW,IAAI,OAAOD,MAAM,CAACC,QAAQ,CAACC,aAAa,KAAK,WAAW;;AAEnJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAGJ,WAAW,GAAGX,eAAe,GAAGC,SAAS;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASe,SAASA,CAAC,GAAGC,IAAI,EAAE;EAC1B,OAAOC,KAAK,IAAI;IACdD,IAAI,CAACE,OAAO,CAACC,GAAG,IAAI;MAClB,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;QAC7BA,GAAG,CAACF,KAAK,CAAC;MACZ,CAAC,MAAM,IAAIE,GAAG,IAAI,IAAI,EAAE;QACtBA,GAAG,CAACC,OAAO,GAAGH,KAAK;MACrB;IACF,CAAC,CAAC;EACJ,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASI,0BAA0BA,CAAC;EAClCC,MAAM;EACNC,oBAAoB;EACpBC,gBAAgB;EAChBC,YAAY;EACZC,eAAe;EACfC,gBAAgB;EAChBC,YAAY;EACZC,WAAW;EACXC,SAAS;EACTC,cAAc;EACdC,aAAa;EACbC,QAAQ;EACRC,YAAY;EACZC,cAAc;EACdC,SAAS;EACTC,EAAE;EACFC,IAAI,GAAG,SAAS;EAChBC,UAAU,GAAG,IAAI;EACjBC,KAAK;EACLC,QAAQ;EACR,aAAa,EAAEC,MAAM;EACrB,GAAGC;AACL,CAAC,EAAExB,GAAG,EAAE;EACN,MAAM,CAACyB,UAAU,EAAEC,WAAW,CAAC,GAAG3C,QAAQ,CAACoB,MAAM,CAACsB,UAAU,CAAC,CAAC,CAAC;EAC/D,MAAME,SAAS,GAAG3C,WAAW,CAAC4C,WAAW,IAAI;IAC3C;IACA;IACA,IAAIA,WAAW,IAAIA,WAAW,CAACC,aAAa,IAAID,WAAW,CAACC,aAAa,CAACC,WAAW,EAAE;MACrF3B,MAAM,CAAC4B,cAAc,CAACH,WAAW,CAAC;IACpC,CAAC,MAAM;MACLzB,MAAM,CAAC4B,cAAc,CAAC,IAAI,CAAC;IAC7B;EACF,CAAC,EAAE,CAAC5B,MAAM,CAAC,CAAC;EACZ,MAAM6B,UAAU,GAAG/C,OAAO,CAAC,MAAMW,SAAS,CAACI,GAAG,EAAE2B,SAAS,CAAC,EAAE,CAACA,SAAS,EAAE3B,GAAG,CAAC,CAAC;EAC7EL,mBAAmB,CAAC,MAAM;IACxB+B,WAAW,CAACvB,MAAM,CAACsB,UAAU,CAAC,CAAC,CAAC;IAChC,OAAOtB,MAAM,CAAC8B,wBAAwB,CAACC,iBAAiB,IAAI;MAC1DR,WAAW,CAACQ,iBAAiB,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC/B,MAAM,CAAC,CAAC;EACZ,OAAO,aAAajB,GAAG,CAAC,KAAK,EAAE;IAC7B,uBAAuB,EAAEuC,UAAU,GAAGrB,oBAAoB,GAAG+B,SAAS;IACtE,mBAAmB,EAAEV,UAAU,GAAGpB,gBAAgB,GAAG,MAAM;IAC3D,eAAe,EAAEoB,UAAU,GAAGnB,YAAY,GAAG6B,SAAS;IACtD,kBAAkB,EAAE5B;IACpB;IAAA;;IAEA,IAAIC,gBAAgB,IAAI,IAAI,GAAG;MAC7B,mBAAmB,EAAEA;IACvB,CAAC,GAAG,CAAC,CAAC,CAAC;IACP,eAAe,EAAEiB,UAAU,IAAIN,IAAI,KAAK,UAAU,GAAG,CAAC,CAACV,YAAY,GAAG0B;IACtE;IAAA;;IAEA,IAAIzB,WAAW,IAAI,IAAI,GAAG;MACxB,cAAc,EAAEA;IAClB,CAAC,GAAG,CAAC,CAAC,CAAC;IACP,YAAY,EAAEC,SAAS;IACvB,iBAAiB,EAAEC,cAAc;IACjC,gBAAgB,EAAEC,aAAa;IAC/B,WAAW,EAAEY,UAAU,GAAGX,QAAQ,GAAGqB,SAAS;IAC9C,eAAe,EAAEV,UAAU,GAAGU,SAAS,GAAG,IAAI;IAC9C,eAAe,EAAEpB,YAAY;IAC7BC,cAAc,EAAEA,cAAc;IAC9BC,SAAS,EAAEA,SAAS;IACpBmB,eAAe,EAAEX,UAAU;IAC3B,aAAa,EAAEF,MAAM;IACrBL,EAAE,EAAEA,EAAE;IACNlB,GAAG,EAAEgC,UAAU;IACfb,IAAI,EAAEM,UAAU,GAAGN,IAAI,GAAGgB,SAAS;IACnCf,UAAU,EAAEA,UAAU;IACtBC,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA,QAAQ;IAClB,GAAGE;EACL,CAAC,CAAC;AACJ;AACA,MAAMa,sBAAsB,GAAG,aAAavD,UAAU,CAACoB,0BAA0B,CAAC;;AAElF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASoC,wCAAwCA,CAACnC,MAAM,EAAE;EACxD,MAAMoC,yBAAyB,GAAGpC,MAAM,CAACqC,cAAc,CAAC,CAAC,CAACC,IAAI,CAACpD,wBAAwB,CAACc,MAAM,CAACuC,WAAW,CAAC,CAAC,CAAC,CAAC;EAC9G,OAAOH,yBAAyB;AAClC;AACA,SAASI,qBAAqBA,CAACxC,MAAM,EAAE;EACrC,MAAM,CAACyC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG9D,QAAQ,CAAC,MAAMuD,wCAAwC,CAACnC,MAAM,CAAC,CAAC;EACpHR,mBAAmB,CAAC,MAAM;IACxB,SAASmD,uBAAuBA,CAAA,EAAG;MACjC,MAAMP,yBAAyB,GAAGD,wCAAwC,CAACnC,MAAM,CAAC;MAClF0C,qBAAqB,CAACN,yBAAyB,CAAC;IAClD;IACAO,uBAAuB,CAAC,CAAC;IACzB,OAAOxD,aAAa,CAACa,MAAM,CAAC4C,sBAAsB,CAAC,MAAM;MACvDD,uBAAuB,CAAC,CAAC;IAC3B,CAAC,CAAC,EAAE3C,MAAM,CAAC8B,wBAAwB,CAAC,MAAM;MACxCa,uBAAuB,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAAC3C,MAAM,CAAC,CAAC;EACZ,OAAOyC,kBAAkB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMI,eAAe,GAAG,aAAalE,UAAU,CAACmE,mBAAmB,CAAC;AACpE,SAASA,mBAAmBA,CAACC,KAAK,EAAElD,GAAG,EAAE;EACvC,MAAM;IACJmD,WAAW;IACX,GAAG3B;EACL,CAAC,GAAG0B,KAAK;EACT,MAAM,CAAC/C,MAAM,CAAC,GAAGxB,yBAAyB,CAAC,CAAC;EAC5C,OAAO,aAAaQ,IAAI,CAACC,QAAQ,EAAE;IACjCgE,QAAQ,EAAE,CAAC,aAAalE,GAAG,CAACmD,sBAAsB,EAAE;MAClDlC,MAAM,EAAEA,MAAM;MACd,GAAGqB,IAAI;MACPxB,GAAG,EAAEA;IACP,CAAC,CAAC,EAAEmD,WAAW,IAAI,IAAI,IAAI,aAAajE,GAAG,CAACmE,WAAW,EAAE;MACvDlD,MAAM,EAAEA,MAAM;MACdmD,OAAO,EAAEH;IACX,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AACA,SAASE,WAAWA,CAAC;EACnBC,OAAO;EACPnD;AACF,CAAC,EAAE;EACD,MAAMoD,eAAe,GAAGZ,qBAAqB,CAACxC,MAAM,CAAC;EACrD,MAAM,CAACsB,UAAU,EAAEC,WAAW,CAAC,GAAG3C,QAAQ,CAACoB,MAAM,CAACsB,UAAU,CAAC,CAAC,CAAC;EAC/D7C,eAAe,CAAC,MAAM;IACpB8C,WAAW,CAACvB,MAAM,CAACsB,UAAU,CAAC,CAAC,CAAC;IAChC,OAAOtB,MAAM,CAAC8B,wBAAwB,CAACC,iBAAiB,IAAI;MAC1DR,WAAW,CAACQ,iBAAiB,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC/B,MAAM,CAAC,CAAC;EACZ,IAAI,CAACoD,eAAe,EAAE;IACpB,OAAO,IAAI;EACb;EACA,IAAIJ,WAAW,GAAG,IAAI;EACtB,IAAI,OAAOG,OAAO,KAAK,UAAU,EAAE;IACjCH,WAAW,GAAGG,OAAO,CAAC7B,UAAU,CAAC;EACnC,CAAC,MAAM,IAAI6B,OAAO,KAAK,IAAI,EAAE;IAC3BH,WAAW,GAAGG,OAAO;EACvB;EACA,IAAIH,WAAW,KAAK,IAAI,EAAE;IACxB,OAAO,IAAI;EACb;EACA,OAAO,aAAajE,GAAG,CAAC,KAAK,EAAE;IAC7B,aAAa,EAAE,IAAI;IACnBkE,QAAQ,EAAED;EACZ,CAAC,CAAC;AACJ;AAEA,SAASH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}