{"ast":null,"code":"var _jsxFileName = \"/Users/Matt.Ratliff/Development/lexical-sandbox/src/components/Editor/plugins/ToolbarPlugin.js\",\n  _s = $RefreshSig$();\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { mergeRegister } from '@lexical/utils';\nimport PropTypes from 'prop-types';\nimport { $getSelection, $isRangeSelection, CAN_REDO_COMMAND, CAN_UNDO_COMMAND, FORMAT_ELEMENT_COMMAND, FORMAT_TEXT_COMMAND, REDO_COMMAND, SELECTION_CHANGE_COMMAND, UNDO_COMMAND, PASTE_COMMAND, OUTDENT_CONTENT_COMMAND, INDENT_CONTENT_COMMAND, COMMAND_PRIORITY_LOW, COPY_COMMAND, CUT_COMMAND } from 'lexical';\nimport { INSERT_ORDERED_LIST_COMMAND, INSERT_UNORDERED_LIST_COMMAND } from '@lexical/list';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport * as React from 'react';\nimport FontSizeWidget from './FontSizeWidget';\nimport TablePlugin from './TablePlugin';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ToolbarButton({\n  classes = '',\n  disabled = false,\n  ...props\n}) {\n  const {\n    id,\n    ariaLabel,\n    onClick,\n    iconName\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    id: id,\n    \"aria-label\": ariaLabel,\n    title: ariaLabel,\n    onClick: () => onClick(),\n    disabled: disabled,\n    className: `toolbar-item spaced ${classes}`,\n    children: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: `format ${iconName}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c = ToolbarButton;\nToolbarButton.propTypes = {\n  id: PropTypes.string,\n  ariaLabel: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.string,\n  disabled: PropTypes.bool,\n  iconName: PropTypes.string.isRequired\n};\nexport default function ToolbarPlugin({\n  id = '',\n  toolList = '',\n  showToolbar = false,\n  isCanUndo,\n  isCanRedo,\n  editorId,\n  customTools = []\n}) {\n  _s();\n  const [editor] = useLexicalComposerContext();\n  const toolbarRef = useRef(null);\n  const [canUndo, setCanUndo] = useState(false);\n  const [canRedo, setCanRedo] = useState(false);\n  const [isBold, setIsBold] = useState(false);\n  const [isItalic, setIsItalic] = useState(false);\n  const [isSubscript, setIsSubscript] = useState(false);\n  const [isSuperscript, setIsSuperscript] = useState(false);\n  const [isUnderline, setIsUnderline] = useState(false);\n  const [isTablePoppedUp, setIsTablePoppedUp] = useState(false);\n  const updateToolbar = useCallback(() => {\n    const selection = $getSelection();\n    if ($isRangeSelection(selection)) {\n      // Update text format\n      setIsBold(selection.hasFormat('bold'));\n      setIsSubscript(selection.hasFormat('subscript'));\n      setIsSuperscript(selection.hasFormat('superscript'));\n      setIsItalic(selection.hasFormat('italic'));\n      setIsUnderline(selection.hasFormat('underline'));\n    }\n  }, []);\n  const toolbarNameButtonMap = {\n    fontcase: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"font-case\",\n      ariaLabel: \"font-case\",\n      classes: isBold ? 'active' : '',\n      iconName: \"font-case\",\n      onClick: () => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'font-case')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }, this),\n    horizontalrule: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"horizontal-rule\",\n      ariaLabel: \"horizontal-rule\",\n      classes: isBold ? 'active' : '',\n      iconName: \"horizontal-rule\",\n      onClick: () => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'horizontal-rule')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }, this),\n    maximize: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"maximize\",\n      ariaLabel: \"maximize\",\n      classes: isBold ? 'active' : '',\n      iconName: \"maximize\",\n      onClick: () => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'maximize')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }, this),\n    footnote: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"footnote\",\n      ariaLabel: \"Add Footnote\",\n      classes: isBold ? 'active' : '',\n      iconName: \"footnote\",\n      onClick: () => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'footnote')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this),\n    source: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"source\",\n      ariaLabel: \"View Source\",\n      classes: isBold ? 'active' : '',\n      iconName: \"source\",\n      onClick: () => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'source')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this),\n    pasteword: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"pasteword\",\n      ariaLabel: \"Paste From Word\",\n      classes: isBold ? 'active' : '',\n      iconName: \"pasteword\",\n      onClick: () => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'pasteword')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 14\n    }, this),\n    spellcheck: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"spellcheck\",\n      ariaLabel: \"Check Spelling\",\n      classes: isBold ? 'active' : '',\n      iconName: \"spellcheck\",\n      onClick: () => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'spellcheck')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this),\n    bold: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"formatbold\",\n      ariaLabel: \"Format Bold\",\n      classes: isBold ? 'active' : '',\n      iconName: \"bold\",\n      onClick: () => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'bold')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }, this),\n    italic: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"formatitalics\",\n      ariaLabel: \"Format Italics\",\n      classes: isItalic ? 'active' : '',\n      iconName: \"italic\",\n      onClick: () => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'italic')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this),\n    subscript: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"formatsubscript\",\n      ariaLabel: \"Format Subscript\",\n      classes: isSubscript ? 'active' : '',\n      iconName: \"subscript\",\n      onClick: () => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'subscript')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 16\n    }, this),\n    superscript: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"formatsuperscript\",\n      ariaLabel: \"Format Superscript\",\n      classes: isSuperscript ? 'active' : '',\n      iconName: \"superscript\",\n      onClick: () => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'superscript')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 18\n    }, this),\n    underline: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"formatunderline\",\n      ariaLabel: \"Format Underline\",\n      classes: isUnderline ? 'active' : '',\n      iconName: \"underline\",\n      onClick: () => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'underline')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 16\n    }, this),\n    alignleft: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"alignleft\",\n      ariaLabel: \"Left Align\",\n      iconName: \"left-align\",\n      onClick: () => editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'left')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 16\n    }, this),\n    aligncenter: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"aligncenter\",\n      ariaLabel: \"Center Align\",\n      iconName: \"center-align\",\n      onClick: () => editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'center')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 18\n    }, this),\n    alignright: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"alignright\",\n      ariaLabel: \"Right Align\",\n      iconName: \"right-align\",\n      onClick: () => editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'right')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }, this),\n    alignjustify: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"justifyalign\",\n      ariaLabel: \"Justify Align\",\n      iconName: \"justify-align\",\n      onClick: () => editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'justify')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }, this),\n    bullist: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"bulletedlist\",\n      ariaLabel: \"Bulleted List\",\n      iconName: \"bulleted-list\",\n      onClick: () => editor.dispatchCommand(INSERT_UNORDERED_LIST_COMMAND, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 14\n    }, this),\n    numlist: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"numberedlist\",\n      ariaLabel: \"Numbered List\",\n      iconName: \"numbered-list\",\n      onClick: () => editor.dispatchCommand(INSERT_ORDERED_LIST_COMMAND, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 14\n    }, this),\n    outdent: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"outdent\",\n      ariaLabel: \"Outdent\",\n      iconName: \"outdent\",\n      onClick: () => editor.dispatchCommand(OUTDENT_CONTENT_COMMAND, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 14\n    }, this),\n    indent: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"indent\",\n      ariaLabel: \"Indent\",\n      iconName: \"indent\",\n      onClick: () => editor.dispatchCommand(INDENT_CONTENT_COMMAND, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this),\n    table: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"lexical-table-icon\",\n      className: \"lexical-table-popup-container\",\n      children: [/*#__PURE__*/_jsxDEV(ToolbarButton, {\n        ariaLabel: \"Insert Table\",\n        iconName: \"create-table\",\n        onClick: () => setIsTablePoppedUp(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 5\n      }, this), isTablePoppedUp && /*#__PURE__*/_jsxDEV(TablePlugin, {\n        isTablePoppedUp: isTablePoppedUp,\n        setIsTablePoppedUp: setIsTablePoppedUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 3\n    }, this),\n    undo: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"undo\",\n      ariaLabel: \"Undo\",\n      iconName: \"undo\",\n      disabled: !canUndo,\n      onClick: () => editor.dispatchCommand(UNDO_COMMAND, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }, this),\n    redo: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"redo\",\n      ariaLabel: \"Redo\",\n      iconName: \"redo\",\n      disabled: !canRedo,\n      onClick: () => editor.dispatchCommand(REDO_COMMAND, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }, this),\n    copy: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"copy\",\n      ariaLabel: \"Copy\",\n      iconName: \"clipboard\",\n      onClick: () => editor.dispatchCommand(COPY_COMMAND, null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }, this),\n    paste: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"paste\",\n      ariaLabel: \"Paste\",\n      iconName: \"paste\",\n      onClick: () => {\n        navigator.clipboard.read().then(async () => {\n          const data = new DataTransfer();\n          const items = await navigator.clipboard.read();\n          const item = items[0];\n          const itemTypes = await Promise.all(item.types.map(type => item.getType(type)));\n          const itemTypeTexts = await Promise.all(itemTypes.map(itemType => itemType.text()));\n          itemTypes.forEach((itemType, i) => {\n            const itemTypeText = itemTypeTexts[i];\n            data.setData(itemType.type, itemTypeText);\n          });\n          const event = new ClipboardEvent('paste', {\n            clipboardData: data\n          });\n          editor.dispatchCommand(PASTE_COMMAND, event);\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 12\n    }, this),\n    cut: /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      id: \"cut\",\n      ariaLabel: \"Cut\",\n      iconName: \"cut\",\n      onClick: () => editor.dispatchCommand(CUT_COMMAND, null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 10\n    }, this),\n    fontSize: /*#__PURE__*/_jsxDEV(FontSizeWidget, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }, this)\n  };\n  const buildToolbarButton = name => {\n    const buttonComponent = toolbarNameButtonMap[name];\n    if (buttonComponent) {\n      return buttonComponent;\n    }\n    const customToolConfig = customTools.find(customTool => name === customTool.name);\n    if (!customToolConfig) return null;\n    return /*#__PURE__*/_jsxDEV(ToolbarButton, {\n      ariaLabel: customToolConfig.buttonTitle,\n      iconName: customToolConfig.buttonIcon,\n      onClick: () => customToolConfig.onClick(editor)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this);\n  };\n  const toolbarList = () => toolList.trim().split(/\\s+/);\n  useEffect(() => mergeRegister(editor.registerUpdateListener(({\n    editorState\n  }) => {\n    editorState.read(() => {\n      updateToolbar();\n    });\n  }), editor.registerCommand(SELECTION_CHANGE_COMMAND, (/* _payload, newEditor */\n  ) => {\n    updateToolbar();\n    return false;\n  }, COMMAND_PRIORITY_LOW), editor.registerCommand(CAN_UNDO_COMMAND, payload => {\n    isCanUndo(payload);\n    setCanUndo(payload);\n    return false;\n  }, COMMAND_PRIORITY_LOW), editor.registerCommand(CAN_REDO_COMMAND, payload => {\n    isCanRedo(payload);\n    setCanRedo(payload);\n    return false;\n  }, COMMAND_PRIORITY_LOW)), [editor, updateToolbar]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      id: id,\n      ref: toolbarRef,\n      children: toolbarList().map(toolbarNameOption => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: buildToolbarButton(toolbarNameOption)\n      }, `${editorId}Menu${toolbarNameOption}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ToolbarPlugin, \"BXqgzNPKh75n3Glee21bIxgYk2I=\", false, function () {\n  return [useLexicalComposerContext];\n});\n_c2 = ToolbarPlugin;\nexport const customToolProps = PropTypes.arrayOf(PropTypes.shape({\n  buttonIcon: PropTypes.string.isRequired,\n  buttonTitle: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n}));\nToolbarPlugin.propTypes = {\n  id: PropTypes.string,\n  editorId: PropTypes.string.isRequired,\n  toolList: PropTypes.string,\n  isCanUndo: PropTypes.func.isRequired,\n  isCanRedo: PropTypes.func.isRequired,\n  showToolbar: PropTypes.bool,\n  customTools: customToolProps\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"ToolbarButton\");\n$RefreshReg$(_c2, \"ToolbarPlugin\");","map":{"version":3,"names":["useLexicalComposerContext","mergeRegister","PropTypes","$getSelection","$isRangeSelection","CAN_REDO_COMMAND","CAN_UNDO_COMMAND","FORMAT_ELEMENT_COMMAND","FORMAT_TEXT_COMMAND","REDO_COMMAND","SELECTION_CHANGE_COMMAND","UNDO_COMMAND","PASTE_COMMAND","OUTDENT_CONTENT_COMMAND","INDENT_CONTENT_COMMAND","COMMAND_PRIORITY_LOW","COPY_COMMAND","CUT_COMMAND","INSERT_ORDERED_LIST_COMMAND","INSERT_UNORDERED_LIST_COMMAND","useCallback","useEffect","useRef","useState","React","FontSizeWidget","TablePlugin","jsxDEV","_jsxDEV","Fragment","_Fragment","ToolbarButton","classes","disabled","props","id","ariaLabel","onClick","iconName","type","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","func","bool","ToolbarPlugin","toolList","showToolbar","isCanUndo","isCanRedo","editorId","customTools","_s","editor","toolbarRef","canUndo","setCanUndo","canRedo","setCanRedo","isBold","setIsBold","isItalic","setIsItalic","isSubscript","setIsSubscript","isSuperscript","setIsSuperscript","isUnderline","setIsUnderline","isTablePoppedUp","setIsTablePoppedUp","updateToolbar","selection","hasFormat","toolbarNameButtonMap","fontcase","dispatchCommand","horizontalrule","maximize","footnote","source","pasteword","spellcheck","bold","italic","subscript","superscript","underline","alignleft","aligncenter","alignright","alignjustify","bullist","undefined","numlist","outdent","indent","table","undo","redo","copy","paste","navigator","clipboard","read","then","data","DataTransfer","items","item","itemTypes","Promise","all","types","map","getType","itemTypeTexts","itemType","text","forEach","i","itemTypeText","setData","event","ClipboardEvent","clipboardData","cut","fontSize","buildToolbarButton","name","buttonComponent","customToolConfig","find","customTool","buttonTitle","buttonIcon","toolbarList","trim","split","registerUpdateListener","editorState","registerCommand","payload","ref","toolbarNameOption","_c2","customToolProps","arrayOf","shape","$RefreshReg$"],"sources":["/Users/Matt.Ratliff/Development/lexical-sandbox/src/components/Editor/plugins/ToolbarPlugin.js"],"sourcesContent":["import { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { mergeRegister } from '@lexical/utils';\nimport PropTypes from 'prop-types';\nimport {\n  $getSelection,\n  $isRangeSelection,\n  CAN_REDO_COMMAND,\n  CAN_UNDO_COMMAND,\n  FORMAT_ELEMENT_COMMAND,\n  FORMAT_TEXT_COMMAND,\n  REDO_COMMAND,\n  SELECTION_CHANGE_COMMAND,\n  UNDO_COMMAND,\n  PASTE_COMMAND,\n  OUTDENT_CONTENT_COMMAND,\n  INDENT_CONTENT_COMMAND,\n  COMMAND_PRIORITY_LOW,\n  COPY_COMMAND,\n  CUT_COMMAND,\n} from 'lexical';\nimport {\n  INSERT_ORDERED_LIST_COMMAND,\n  INSERT_UNORDERED_LIST_COMMAND,\n} from '@lexical/list';\nimport {\n  useCallback, useEffect, useRef, useState,\n} from 'react';\nimport * as React from 'react';\nimport FontSizeWidget from './FontSizeWidget';\nimport TablePlugin from './TablePlugin';\n\nfunction ToolbarButton({\n  classes = '',\n  disabled = false, ...props\n}) {\n  const {\n    id, ariaLabel, onClick, iconName,\n  } = props;\n  return (\n    <button\n      type=\"button\"\n      id={id}\n      aria-label={ariaLabel}\n      title={ariaLabel}\n      onClick={() => onClick()}\n      disabled={disabled}\n      className={`toolbar-item spaced ${classes}`}\n    >\n      <i className={`format ${iconName}`} />\n    </button>\n  );\n}\n\nToolbarButton.propTypes = {\n  id: PropTypes.string,\n  ariaLabel: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.string,\n  disabled: PropTypes.bool,\n  iconName: PropTypes.string.isRequired,\n};\n\nexport default function ToolbarPlugin({\n  id = '',\n  toolList = '',\n  showToolbar = false,\n  isCanUndo,\n  isCanRedo,\n  editorId, customTools = [],\n}) {\n  const [editor] = useLexicalComposerContext();\n  const toolbarRef = useRef(null);\n  const [canUndo, setCanUndo] = useState(false);\n  const [canRedo, setCanRedo] = useState(false);\n  const [isBold, setIsBold] = useState(false);\n  const [isItalic, setIsItalic] = useState(false);\n  const [isSubscript, setIsSubscript] = useState(false);\n  const [isSuperscript, setIsSuperscript] = useState(false);\n  const [isUnderline, setIsUnderline] = useState(false);\n  const [isTablePoppedUp, setIsTablePoppedUp] = useState(false);\n\n\n  const updateToolbar = useCallback(() => {\n    const selection = $getSelection();\n    if ($isRangeSelection(selection)) {\n      // Update text format\n      setIsBold(selection.hasFormat('bold'));\n      setIsSubscript(selection.hasFormat('subscript'));\n      setIsSuperscript(selection.hasFormat('superscript'));\n      setIsItalic(selection.hasFormat('italic'));\n      setIsUnderline(selection.hasFormat('underline'));\n    }\n  }, []);\n\n  const toolbarNameButtonMap = {\n    fontcase: <ToolbarButton\n    id=\"font-case\"\n    ariaLabel=\"font-case\"\n    classes={isBold ? 'active' : ''}\n    iconName=\"font-case\"\n    onClick={() => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'font-case')}\n  />,\n    horizontalrule: <ToolbarButton\n    id=\"horizontal-rule\"\n    ariaLabel=\"horizontal-rule\"\n    classes={isBold ? 'active' : ''}\n    iconName=\"horizontal-rule\"\n    onClick={() => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'horizontal-rule')}\n  />,\n    maximize: <ToolbarButton\n    id=\"maximize\"\n    ariaLabel=\"maximize\"\n    classes={isBold ? 'active' : ''}\n    iconName=\"maximize\"\n    onClick={() => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'maximize')}\n  />,\n  footnote: <ToolbarButton\n  id=\"footnote\"\n  ariaLabel=\"Add Footnote\"\n  classes={isBold ? 'active' : ''}\n  iconName=\"footnote\"\n  onClick={() => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'footnote')}\n/>,\n  source: <ToolbarButton\n  id=\"source\"\n  ariaLabel=\"View Source\"\n  classes={isBold ? 'active' : ''}\n  iconName=\"source\"\n  onClick={() => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'source')}\n/>,\n  pasteword: <ToolbarButton\n  id=\"pasteword\"\n  ariaLabel=\"Paste From Word\"\n  classes={isBold ? 'active' : ''}\n  iconName=\"pasteword\"\n  onClick={() => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'pasteword')}\n/>,\n    spellcheck: <ToolbarButton\n      id=\"spellcheck\"\n      ariaLabel=\"Check Spelling\"\n      classes={isBold ? 'active' : ''}\n      iconName=\"spellcheck\"\n      onClick={() => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'spellcheck')}\n    />,\n    bold: <ToolbarButton\n      id=\"formatbold\"\n      ariaLabel=\"Format Bold\"\n      classes={isBold ? 'active' : ''}\n      iconName=\"bold\"\n      onClick={() => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'bold')}\n    />,\n    italic: <ToolbarButton\n      id=\"formatitalics\"\n      ariaLabel=\"Format Italics\"\n      classes={isItalic ? 'active' : ''}\n      iconName=\"italic\"\n      onClick={() => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'italic')}\n    />,\n    subscript: <ToolbarButton\n      id=\"formatsubscript\"\n      ariaLabel=\"Format Subscript\"\n      classes={isSubscript ? 'active' : ''}\n      iconName=\"subscript\"\n      onClick={() => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'subscript')}\n    />,\n    superscript: <ToolbarButton\n      id=\"formatsuperscript\"\n      ariaLabel=\"Format Superscript\"\n      classes={isSuperscript ? 'active' : ''}\n      iconName=\"superscript\"\n      onClick={() => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'superscript')}\n    />,\n    underline: <ToolbarButton\n      id=\"formatunderline\"\n      ariaLabel=\"Format Underline\"\n      classes={isUnderline ? 'active' : ''}\n      iconName=\"underline\"\n      onClick={() => editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'underline')}\n    />,\n    alignleft: <ToolbarButton\n      id=\"alignleft\"\n      ariaLabel=\"Left Align\"\n      iconName=\"left-align\"\n      onClick={() => editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'left')}\n    />,\n    aligncenter: <ToolbarButton\n      id=\"aligncenter\"\n      ariaLabel=\"Center Align\"\n      iconName=\"center-align\"\n      onClick={() => editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'center')}\n    />,\n    alignright: <ToolbarButton\n      id=\"alignright\"\n      ariaLabel=\"Right Align\"\n      iconName=\"right-align\"\n      onClick={() => editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'right')}\n    />,\n    alignjustify: <ToolbarButton\n      id=\"justifyalign\"\n      ariaLabel=\"Justify Align\"\n      iconName=\"justify-align\"\n      onClick={() => editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'justify')}\n    />,\n    bullist: <ToolbarButton\n      id=\"bulletedlist\"\n      ariaLabel=\"Bulleted List\"\n      iconName=\"bulleted-list\"\n      onClick={() => editor.dispatchCommand(INSERT_UNORDERED_LIST_COMMAND, undefined)}\n    />,\n    numlist: <ToolbarButton\n      id=\"numberedlist\"\n      ariaLabel=\"Numbered List\"\n      iconName=\"numbered-list\"\n      onClick={() => editor.dispatchCommand(INSERT_ORDERED_LIST_COMMAND, undefined)}\n    />,\n    outdent: <ToolbarButton\n      id=\"outdent\"\n      ariaLabel=\"Outdent\"\n      iconName=\"outdent\"\n      onClick={() => editor.dispatchCommand(OUTDENT_CONTENT_COMMAND, undefined)}\n    />,\n    indent: <ToolbarButton\n      id=\"indent\"\n      ariaLabel=\"Indent\"\n      iconName=\"indent\"\n      onClick={() => editor.dispatchCommand(INDENT_CONTENT_COMMAND, undefined)}\n    />,\n    table:\n  <div id=\"lexical-table-icon\" className=\"lexical-table-popup-container\">\n    <ToolbarButton\n      ariaLabel=\"Insert Table\"\n      iconName=\"create-table\"\n      onClick={() => setIsTablePoppedUp(true)}\n    />\n    {isTablePoppedUp && (\n    <TablePlugin isTablePoppedUp={isTablePoppedUp} setIsTablePoppedUp={setIsTablePoppedUp} />\n    )}\n  </div>,\n    undo: <ToolbarButton\n      id=\"undo\"\n      ariaLabel=\"Undo\"\n      iconName=\"undo\"\n      disabled={!canUndo}\n      onClick={() => editor.dispatchCommand(UNDO_COMMAND, undefined)}\n    />,\n    redo: <ToolbarButton\n      id=\"redo\"\n      ariaLabel=\"Redo\"\n      iconName=\"redo\"\n      disabled={!canRedo}\n      onClick={() => editor.dispatchCommand(REDO_COMMAND, undefined)}\n    />,\n    copy: <ToolbarButton\n      id=\"copy\"\n      ariaLabel=\"Copy\"\n      iconName=\"clipboard\"\n      onClick={() => editor.dispatchCommand(COPY_COMMAND, null)}\n    />,\n    paste: <ToolbarButton\n      id=\"paste\"\n      ariaLabel=\"Paste\"\n      iconName=\"paste\"\n      onClick={() => {\n        navigator.clipboard.read().then(async () => {\n          const data = new DataTransfer();\n\n          const items = await navigator.clipboard.read();\n          const item = items[0];\n          const itemTypes = await Promise.all(item.types.map((type) => item.getType(type)));\n          const itemTypeTexts = await Promise.all(itemTypes.map((itemType) => itemType.text()));\n          itemTypes.forEach((itemType, i) => {\n            const itemTypeText = itemTypeTexts[i];\n            data.setData(itemType.type, itemTypeText);\n          });\n          const event = new ClipboardEvent('paste', {\n            clipboardData: data,\n          });\n          editor.dispatchCommand(PASTE_COMMAND, event);\n        });\n      }}\n    />,\n    cut: <ToolbarButton\n      id=\"cut\"\n      ariaLabel=\"Cut\"\n      iconName=\"cut\"\n      onClick={() => editor.dispatchCommand(CUT_COMMAND, null)}\n    />,\n    fontSize: <FontSizeWidget />,\n  };\n\n  const buildToolbarButton = (name) => {\n    const buttonComponent = toolbarNameButtonMap[name];\n    if (buttonComponent) {\n      return buttonComponent;\n    }\n    const customToolConfig = customTools.find((customTool) => name === customTool.name);\n    if (!customToolConfig) return null;\n    return (\n      <ToolbarButton\n        ariaLabel={customToolConfig.buttonTitle}\n        iconName={customToolConfig.buttonIcon}\n        onClick={() => customToolConfig.onClick(editor)}\n      />\n    );\n  };\n\n  const toolbarList = () => toolList.trim().split(/\\s+/);\n\n  useEffect(() => mergeRegister(\n    editor.registerUpdateListener(({ editorState }) => {\n      editorState.read(() => {\n        updateToolbar();\n      });\n    }),\n    editor.registerCommand(\n      SELECTION_CHANGE_COMMAND,\n      (/* _payload, newEditor */) => {\n        updateToolbar();\n        return false;\n      },\n      COMMAND_PRIORITY_LOW,\n    ),\n    editor.registerCommand(\n      CAN_UNDO_COMMAND,\n      (payload) => {\n        isCanUndo(payload);\n        setCanUndo(payload);\n        return false;\n      },\n      COMMAND_PRIORITY_LOW,\n    ),\n    editor.registerCommand(\n      CAN_REDO_COMMAND,\n      (payload) => {\n        isCanRedo(payload);\n        setCanRedo(payload);\n        return false;\n      },\n      COMMAND_PRIORITY_LOW,\n    ),\n  ), [editor, updateToolbar]);\n\n  return (\n    <>\n      <div className=\"toolbar\" id={id} ref={toolbarRef}>\n        {toolbarList().map((toolbarNameOption) => (\n          <React.Fragment key={`${editorId}Menu${toolbarNameOption}`}>\n            {buildToolbarButton(toolbarNameOption)}\n          </React.Fragment>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport const customToolProps = PropTypes.arrayOf(PropTypes.shape({\n  buttonIcon: PropTypes.string.isRequired,\n  buttonTitle: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n}));\n\nToolbarPlugin.propTypes = {\n  id: PropTypes.string,\n  editorId: PropTypes.string.isRequired,\n  toolList: PropTypes.string,\n  isCanUndo: PropTypes.func.isRequired,\n  isCanRedo: PropTypes.func.isRequired,\n  showToolbar: PropTypes.bool,\n  customTools: customToolProps,\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}