{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport * as React from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n *\n * Use this plugin to access the editor instance outside of the\n * LexicalComposer. This can help with things like buttons or other\n * UI components that need to update or read EditorState but need to\n * be positioned outside the LexicalComposer in the React tree.\n */\nfunction EditorRefPlugin({\n  editorRef\n}) {\n  const [editor] = useLexicalComposerContext();\n  React.useEffect(() => {\n    if (typeof editorRef === 'function') {\n      editorRef(editor);\n    } else if (typeof editorRef === 'object') {\n      editorRef.current = editor;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor]);\n  return null;\n}\nexport { EditorRefPlugin };","map":{"version":3,"names":["useLexicalComposerContext","React","EditorRefPlugin","editorRef","editor","useEffect","current"],"sources":["/Users/Matt.Ratliff/Development/lexical-sandbox/node_modules/@lexical/react/LexicalEditorRefPlugin.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport * as React from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n/**\n *\n * Use this plugin to access the editor instance outside of the\n * LexicalComposer. This can help with things like buttons or other\n * UI components that need to update or read EditorState but need to\n * be positioned outside the LexicalComposer in the React tree.\n */\nfunction EditorRefPlugin({\n  editorRef\n}) {\n  const [editor] = useLexicalComposerContext();\n  React.useEffect(() => {\n    if (typeof editorRef === 'function') {\n      editorRef(editor);\n    } else if (typeof editorRef === 'object') {\n      editorRef.current = editor;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor]);\n  return null;\n}\n\nexport { EditorRefPlugin };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,yBAAyB,QAAQ,uCAAuC;AACjF,OAAO,KAAKC,KAAK,MAAM,OAAO;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAAC;EACvBC;AACF,CAAC,EAAE;EACD,MAAM,CAACC,MAAM,CAAC,GAAGJ,yBAAyB,CAAC,CAAC;EAC5CC,KAAK,CAACI,SAAS,CAAC,MAAM;IACpB,IAAI,OAAOF,SAAS,KAAK,UAAU,EAAE;MACnCA,SAAS,CAACC,MAAM,CAAC;IACnB,CAAC,MAAM,IAAI,OAAOD,SAAS,KAAK,QAAQ,EAAE;MACxCA,SAAS,CAACG,OAAO,GAAGF,MAAM;IAC5B;IACA;EACF,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EACZ,OAAO,IAAI;AACb;AAEA,SAASF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}