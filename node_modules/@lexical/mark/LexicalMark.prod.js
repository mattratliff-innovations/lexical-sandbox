/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

'use strict';var k=require("lexical"),n=require("@lexical/utils");let p=[];
class q extends k.ElementNode{static getType(){return"mark"}static clone(a){return new q(a.__ids,a.__key)}static importDOM(){return null}static importJSON(a){return r().updateFromJSON(a)}updateFromJSON(a){return super.updateFromJSON(a).setIDs(a.ids)}exportJSON(){return{...super.exportJSON(),ids:this.getIDs()}}constructor(a=p,b){super(b);this.__ids=a}createDOM(a){let b=document.createElement("mark");n.addClassNamesToElement(b,a.theme.mark);1<this.__ids.length&&n.addClassNamesToElement(b,a.theme.markOverlap);
return b}updateDOM(a,b,c){a=a.__ids.length;let d=this.__ids.length;c=c.theme.markOverlap;a!==d&&(1===a?2===d&&n.addClassNamesToElement(b,c):1===d&&n.removeClassNamesFromElement(b,c));return!1}hasID(a){return this.getIDs().includes(a)}getIDs(){return Array.from(this.getLatest().__ids)}setIDs(a){let b=this.getWritable();b.__ids=a;return b}addID(a){let b=this.getWritable();return b.__ids.includes(a)?b:b.setIDs([...b.__ids,a])}deleteID(a){let b=this.getWritable();a=b.__ids.indexOf(a);if(-1===a)return b;
let c=Array.from(b.__ids);c.splice(a,1);return b.setIDs(c)}insertNewAfter(a,b=!0){a=r(this.__ids);this.insertAfter(a,b);return a}canInsertTextBefore(){return!1}canInsertTextAfter(){return!1}canBeEmpty(){return!1}isInline(){return!0}extractWithChild(a,b,c){if(!k.$isRangeSelection(b)||"html"===c)return!1;let d=b.anchor,h=b.focus;a=d.getNode();c=h.getNode();b=b.isBackward()?d.offset-h.offset:h.offset-d.offset;return this.isParentOf(a)&&this.isParentOf(c)&&this.getTextContent().length===b}excludeFromCopy(a){return"clone"!==
a}}function r(a=p){return k.$applyNodeReplacement(new q(a))}function w(a){return a instanceof q}exports.$createMarkNode=r;exports.$getMarkIDs=function(a,b){for(;null!==a;){if(w(a))return a.getIDs();if(k.$isTextNode(a)&&b===a.getTextContentSize()){let c=a.getNextSibling();if(w(c))return c.getIDs()}a=a.getParent()}return null};exports.$isMarkNode=w;exports.$unwrapMarkNode=function(a){let b=a.getChildren(),c=null;for(let d=0;d<b.length;d++){let h=b[d];null===c?a.insertBefore(h):c.insertAfter(h);c=h}a.remove()};
exports.$wrapSelectionInMarkNode=function(a,b,c,d){let h=a.getNodes();var t=a.anchor.offset,l=a.focus.offset;a=h.length;let z=b?l:t;t=b?t:l;let u,f;for(l=0;l<a;l++){var e=h[l];if(k.$isElementNode(f)&&f.isParentOf(e))continue;var m=0===l;let x=l===a-1;var g=null;if(k.$isTextNode(e)){g=e.getTextContentSize();let y=m?z:0,v=x?t:g;if(0===y&&0===v)continue;e=e.splitText(y,v);g=1<e.length&&(3===e.length||m&&!x||v===g)?e[1]:e[0]}else if(w(e))continue;else k.$isElementNode(e)&&e.isInline()&&(g=e);null!==g?
g&&g.is(u)||(m=g.getParent(),null!=m&&m.is(u)||(f=void 0),u=m,void 0===f&&(f=(d||r)([c]),g.insertBefore(f)),f.append(g)):f=u=void 0}k.$isElementNode(f)&&(b?f.selectStart():f.selectEnd())};exports.MarkNode=q
